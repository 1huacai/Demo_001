// Generated by sprotodump. DO NOT EDIT!
// source: H:\xiaoxiaole\demo3\Assets\Sproto\proto\/proto.c2s.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace SprotoType { 
	public class block_info : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _row; // tag 0
		public Int64 row {
			get { return _row; }
			set { base.has_field.set_field (0, true); _row = value; }
		}
		public bool HasRow {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _col; // tag 1
		public Int64 col {
			get { return _col; }
			set { base.has_field.set_field (1, true); _col = value; }
		}
		public bool HasCol {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _type; // tag 2
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (2, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (2); }
		}

		public block_info () : base(max_field_count) {}

		public block_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.row = base.deserialize.read_integer ();
					break;
				case 1:
					this.col = base.deserialize.read_integer ();
					break;
				case 2:
					this.type = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.row, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.col, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.type, 2);
			}

			return base.serialize.close ();
		}
	}


	public class createBlock {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<block_info> _matrix; // tag 0
			public List<block_info> matrix {
				get { return _matrix; }
				set { base.has_field.set_field (0, true); _matrix = value; }
			}
			public bool HasMatrix {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.matrix = base.deserialize.read_obj_list<block_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.matrix, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _e; // tag 0
			public Int64 e {
				get { return _e; }
				set { base.has_field.set_field (0, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.e = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.e, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class createBlock_broadcast {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<block_info> _matrix; // tag 0
			public List<block_info> matrix {
				get { return _matrix; }
				set { base.has_field.set_field (0, true); _matrix = value; }
			}
			public bool HasMatrix {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.matrix = base.deserialize.read_obj_list<block_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.matrix, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class eliminate {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _count; // tag 0
			public Int64 count {
				get { return _count; }
				set { base.has_field.set_field (0, true); _count = value; }
			}
			public bool HasCount {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.count = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.count, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _e; // tag 0
			public Int64 e {
				get { return _e; }
				set { base.has_field.set_field (0, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.e = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.e, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class eliminate_broadcast {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _count; // tag 0
			public Int64 count {
				get { return _count; }
				set { base.has_field.set_field (0, true); _count = value; }
			}
			public bool HasCount {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.count = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.count, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class error {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (0); }
			}

			private string _txt; // tag 1
			public string txt {
				get { return _txt; }
				set { base.has_field.set_field (1, true); _txt = value; }
			}
			public bool HasTxt {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					case 1:
						this.txt = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.txt, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_auth {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _imei; // tag 0
			public string imei {
				get { return _imei; }
				set { base.has_field.set_field (0, true); _imei = value; }
			}
			public bool HasImei {
				get { return base.has_field.has_field (0); }
			}

			private string _version; // tag 1
			public string version {
				get { return _version; }
				set { base.has_field.set_field (1, true); _version = value; }
			}
			public bool HasVersion {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.imei = base.deserialize.read_string ();
						break;
					case 1:
						this.version = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.imei, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.version, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _e; // tag 0
			public Int64 e {
				get { return _e; }
				set { base.has_field.set_field (0, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (0); }
			}

			private string _rid; // tag 1
			public string rid {
				get { return _rid; }
				set { base.has_field.set_field (1, true); _rid = value; }
			}
			public bool HasRid {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _server_time; // tag 2
			public Int64 server_time {
				get { return _server_time; }
				set { base.has_field.set_field (2, true); _server_time = value; }
			}
			public bool HasServer_time {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.e = base.deserialize.read_integer ();
						break;
					case 1:
						this.rid = base.deserialize.read_string ();
						break;
					case 2:
						this.server_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.e, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.rid, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.server_time, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_new_row {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<block_info> _matrix; // tag 0
			public List<block_info> matrix {
				get { return _matrix; }
				set { base.has_field.set_field (0, true); _matrix = value; }
			}
			public bool HasMatrix {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.matrix = base.deserialize.read_obj_list<block_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.matrix, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _e; // tag 0
			public Int64 e {
				get { return _e; }
				set { base.has_field.set_field (0, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.e = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.e, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_new_row_broadcast {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<block_info> _matrix; // tag 0
			public List<block_info> matrix {
				get { return _matrix; }
				set { base.has_field.set_field (0, true); _matrix = value; }
			}
			public bool HasMatrix {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.matrix = base.deserialize.read_obj_list<block_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.matrix, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_over {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _e; // tag 0
			public Int64 e {
				get { return _e; }
				set { base.has_field.set_field (0, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.e = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.e, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_over_broadcast {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _winner; // tag 1
			public string winner {
				get { return _winner; }
				set { base.has_field.set_field (0, true); _winner = value; }
			}
			public bool HasWinner {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 1:
						this.winner = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.winner, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_ready {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<block_info> _matrix; // tag 0
			public List<block_info> matrix {
				get { return _matrix; }
				set { base.has_field.set_field (0, true); _matrix = value; }
			}
			public bool HasMatrix {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.matrix = base.deserialize.read_obj_list<block_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.matrix, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_start {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _start_time; // tag 0
			public Int64 start_time {
				get { return _start_time; }
				set { base.has_field.set_field (0, true); _start_time = value; }
			}
			public bool HasStart_time {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.start_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.start_time, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_swap {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private block_info _block1; // tag 0
			public block_info block1 {
				get { return _block1; }
				set { base.has_field.set_field (0, true); _block1 = value; }
			}
			public bool HasBlock1 {
				get { return base.has_field.has_field (0); }
			}

			private block_info _block2; // tag 1
			public block_info block2 {
				get { return _block2; }
				set { base.has_field.set_field (1, true); _block2 = value; }
			}
			public bool HasBlock2 {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.block1 = base.deserialize.read_obj<block_info> ();
						break;
					case 1:
						this.block2 = base.deserialize.read_obj<block_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.block1, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.block2, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _e; // tag 0
			public Int64 e {
				get { return _e; }
				set { base.has_field.set_field (0, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.e = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.e, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_swap_broadcast {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private block_info _block1; // tag 0
			public block_info block1 {
				get { return _block1; }
				set { base.has_field.set_field (0, true); _block1 = value; }
			}
			public bool HasBlock1 {
				get { return base.has_field.has_field (0); }
			}

			private block_info _block2; // tag 1
			public block_info block2 {
				get { return _block2; }
				set { base.has_field.set_field (1, true); _block2 = value; }
			}
			public bool HasBlock2 {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.block1 = base.deserialize.read_obj<block_info> ();
						break;
					case 1:
						this.block2 = base.deserialize.read_obj<block_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.block1, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.block2, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_up_row {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _e; // tag 0
			public Int64 e {
				get { return _e; }
				set { base.has_field.set_field (0, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.e = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.e, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_up_row_broadcast {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


	}


	public class game_use_skill {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _skill_id; // tag 0
			public Int64 skill_id {
				get { return _skill_id; }
				set { base.has_field.set_field (0, true); _skill_id = value; }
			}
			public bool HasSkill_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.skill_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.skill_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _e; // tag 0
			public Int64 e {
				get { return _e; }
				set { base.has_field.set_field (0, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.e = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.e, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_use_skill_broadcast {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _skill_id; // tag 0
			public Int64 skill_id {
				get { return _skill_id; }
				set { base.has_field.set_field (0, true); _skill_id = value; }
			}
			public bool HasSkill_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.skill_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.skill_id, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class key_value : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _value; // tag 1
		public Int64 value {
			get { return _value; }
			set { base.has_field.set_field (1, true); _value = value; }
		}
		public bool HasValue {
			get { return base.has_field.has_field (1); }
		}

		public key_value () : base(max_field_count) {}

		public key_value (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.value = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.value, 1);
			}

			return base.serialize.close ();
		}
	}


	public class login {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _rid; // tag 0
			public string rid {
				get { return _rid; }
				set { base.has_field.set_field (0, true); _rid = value; }
			}
			public bool HasRid {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.rid = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.rid, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _e; // tag 0
			public Int64 e {
				get { return _e; }
				set { base.has_field.set_field (0, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.e = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.e, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class match_cancel {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _e; // tag 0
			public Int64 e {
				get { return _e; }
				set { base.has_field.set_field (0, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.e = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.e, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class match_error {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _type; // tag 0
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (0, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.type, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class match_start {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _e; // tag 0
			public Int64 e {
				get { return _e; }
				set { base.has_field.set_field (0, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.e = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.e, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class match_success {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<player_info> _players; // tag 0
			public List<player_info> players {
				get { return _players; }
				set { base.has_field.set_field (0, true); _players = value; }
			}
			public bool HasPlayers {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.players = base.deserialize.read_obj_list<player_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.players, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class match_timeout {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


	}


	public class package : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _type; // tag 0
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (0, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _session; // tag 1
		public Int64 session {
			get { return _session; }
			set { base.has_field.set_field (1, true); _session = value; }
		}
		public bool HasSession {
			get { return base.has_field.has_field (1); }
		}

		private string _ud; // tag 2
		public string ud {
			get { return _ud; }
			set { base.has_field.set_field (2, true); _ud = value; }
		}
		public bool HasUd {
			get { return base.has_field.has_field (2); }
		}

		public package () : base(max_field_count) {}

		public package (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.type = base.deserialize.read_integer ();
					break;
				case 1:
					this.session = base.deserialize.read_integer ();
					break;
				case 2:
					this.ud = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.session, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.ud, 2);
			}

			return base.serialize.close ();
		}
	}


	public class player_info : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private string _rid; // tag 0
		public string rid {
			get { return _rid; }
			set { base.has_field.set_field (0, true); _rid = value; }
		}
		public bool HasRid {
			get { return base.has_field.has_field (0); }
		}

		private string _rname; // tag 1
		public string rname {
			get { return _rname; }
			set { base.has_field.set_field (1, true); _rname = value; }
		}
		public bool HasRname {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _render; // tag 2
		public Int64 render {
			get { return _render; }
			set { base.has_field.set_field (2, true); _render = value; }
		}
		public bool HasRender {
			get { return base.has_field.has_field (2); }
		}

		public player_info () : base(max_field_count) {}

		public player_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.rid = base.deserialize.read_string ();
					break;
				case 1:
					this.rname = base.deserialize.read_string ();
					break;
				case 2:
					this.render = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.rid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.rname, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.render, 2);
			}

			return base.serialize.close ();
		}
	}


}


public class Protocol : ProtocolBase {
	public static  Protocol Instance = new Protocol();
	private Protocol() {
		Protocol.SetProtocol<createBlock> (createBlock.Tag);
		Protocol.SetRequest<SprotoType.createBlock.request> (createBlock.Tag);
		Protocol.SetResponse<SprotoType.createBlock.response> (createBlock.Tag);

		Protocol.SetProtocol<createBlock_broadcast> (createBlock_broadcast.Tag);
		Protocol.SetRequest<SprotoType.createBlock_broadcast.request> (createBlock_broadcast.Tag);

		Protocol.SetProtocol<eliminate> (eliminate.Tag);
		Protocol.SetRequest<SprotoType.eliminate.request> (eliminate.Tag);
		Protocol.SetResponse<SprotoType.eliminate.response> (eliminate.Tag);

		Protocol.SetProtocol<eliminate_broadcast> (eliminate_broadcast.Tag);
		Protocol.SetRequest<SprotoType.eliminate_broadcast.request> (eliminate_broadcast.Tag);

		Protocol.SetProtocol<error> (error.Tag);
		Protocol.SetRequest<SprotoType.error.request> (error.Tag);

		Protocol.SetProtocol<game_auth> (game_auth.Tag);
		Protocol.SetRequest<SprotoType.game_auth.request> (game_auth.Tag);
		Protocol.SetResponse<SprotoType.game_auth.response> (game_auth.Tag);

		Protocol.SetProtocol<game_new_row> (game_new_row.Tag);
		Protocol.SetRequest<SprotoType.game_new_row.request> (game_new_row.Tag);
		Protocol.SetResponse<SprotoType.game_new_row.response> (game_new_row.Tag);

		Protocol.SetProtocol<game_new_row_broadcast> (game_new_row_broadcast.Tag);
		Protocol.SetRequest<SprotoType.game_new_row_broadcast.request> (game_new_row_broadcast.Tag);

		Protocol.SetProtocol<game_over> (game_over.Tag);
		Protocol.SetRequest<SprotoType.game_over.request> (game_over.Tag);
		Protocol.SetResponse<SprotoType.game_over.response> (game_over.Tag);

		Protocol.SetProtocol<game_over_broadcast> (game_over_broadcast.Tag);
		Protocol.SetRequest<SprotoType.game_over_broadcast.request> (game_over_broadcast.Tag);

		Protocol.SetProtocol<game_ready> (game_ready.Tag);
		Protocol.SetRequest<SprotoType.game_ready.request> (game_ready.Tag);

		Protocol.SetProtocol<game_start> (game_start.Tag);
		Protocol.SetRequest<SprotoType.game_start.request> (game_start.Tag);

		Protocol.SetProtocol<game_swap> (game_swap.Tag);
		Protocol.SetRequest<SprotoType.game_swap.request> (game_swap.Tag);
		Protocol.SetResponse<SprotoType.game_swap.response> (game_swap.Tag);

		Protocol.SetProtocol<game_swap_broadcast> (game_swap_broadcast.Tag);
		Protocol.SetRequest<SprotoType.game_swap_broadcast.request> (game_swap_broadcast.Tag);

		Protocol.SetProtocol<game_up_row> (game_up_row.Tag);
		Protocol.SetRequest<SprotoType.game_up_row.request> (game_up_row.Tag);
		Protocol.SetResponse<SprotoType.game_up_row.response> (game_up_row.Tag);

		Protocol.SetProtocol<game_up_row_broadcast> (game_up_row_broadcast.Tag);
		Protocol.SetRequest<SprotoType.game_up_row_broadcast.request> (game_up_row_broadcast.Tag);

		Protocol.SetProtocol<game_use_skill> (game_use_skill.Tag);
		Protocol.SetRequest<SprotoType.game_use_skill.request> (game_use_skill.Tag);
		Protocol.SetResponse<SprotoType.game_use_skill.response> (game_use_skill.Tag);

		Protocol.SetProtocol<game_use_skill_broadcast> (game_use_skill_broadcast.Tag);
		Protocol.SetRequest<SprotoType.game_use_skill_broadcast.request> (game_use_skill_broadcast.Tag);

		Protocol.SetProtocol<login> (login.Tag);
		Protocol.SetRequest<SprotoType.login.request> (login.Tag);
		Protocol.SetResponse<SprotoType.login.response> (login.Tag);

		Protocol.SetProtocol<match_cancel> (match_cancel.Tag);
		Protocol.SetRequest<SprotoType.match_cancel.request> (match_cancel.Tag);
		Protocol.SetResponse<SprotoType.match_cancel.response> (match_cancel.Tag);

		Protocol.SetProtocol<match_error> (match_error.Tag);
		Protocol.SetRequest<SprotoType.match_error.request> (match_error.Tag);

		Protocol.SetProtocol<match_start> (match_start.Tag);
		Protocol.SetRequest<SprotoType.match_start.request> (match_start.Tag);
		Protocol.SetResponse<SprotoType.match_start.response> (match_start.Tag);

		Protocol.SetProtocol<match_success> (match_success.Tag);
		Protocol.SetRequest<SprotoType.match_success.request> (match_success.Tag);

		Protocol.SetProtocol<match_timeout> (match_timeout.Tag);
		Protocol.SetRequest<SprotoType.match_timeout.request> (match_timeout.Tag);

	}

	public class createBlock {
		public const int Tag = 64;
	}

	public class createBlock_broadcast {
		public const int Tag = 65;
	}

	public class eliminate {
		public const int Tag = 62;
	}

	public class eliminate_broadcast {
		public const int Tag = 63;
	}

	public class error {
		public const int Tag = 1;
	}

	public class game_auth {
		public const int Tag = 20;
	}

	public class game_new_row {
		public const int Tag = 60;
	}

	public class game_new_row_broadcast {
		public const int Tag = 61;
	}

	public class game_over {
		public const int Tag = 58;
	}

	public class game_over_broadcast {
		public const int Tag = 59;
	}

	public class game_ready {
		public const int Tag = 50;
	}

	public class game_start {
		public const int Tag = 51;
	}

	public class game_swap {
		public const int Tag = 52;
	}

	public class game_swap_broadcast {
		public const int Tag = 53;
	}

	public class game_up_row {
		public const int Tag = 54;
	}

	public class game_up_row_broadcast {
		public const int Tag = 55;
	}

	public class game_use_skill {
		public const int Tag = 56;
	}

	public class game_use_skill_broadcast {
		public const int Tag = 57;
	}

	public class login {
		public const int Tag = 21;
	}

	public class match_cancel {
		public const int Tag = 41;
	}

	public class match_error {
		public const int Tag = 44;
	}

	public class match_start {
		public const int Tag = 40;
	}

	public class match_success {
		public const int Tag = 42;
	}

	public class match_timeout {
		public const int Tag = 43;
	}

}